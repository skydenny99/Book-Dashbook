# Generated by Django 3.1 on 2020-09-15 07:59

import Books.managers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('book_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('book_title', models.CharField(max_length=20)),
                ('book_hash_tags', models.TextField()),
                ('book_author', models.CharField(max_length=50)),
                ('book_info', models.TextField()),
                ('book_image', models.ImageField(blank=True, null=True, upload_to='C:\\Users\\kimde\\Documents\\Book-Dashbook\\media')),
            ],
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter_num', models.IntegerField()),
                ('chapter_title', models.CharField(max_length=20)),
                ('chapter_info', models.TextField(blank=True, null=True)),
                ('chapter_hash_tags', models.TextField()),
                ('chapter_subs', models.TextField()),
                ('book_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Books.book')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=10, unique=True)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_author', models.BooleanField(default=False)),
                ('user_info', models.TextField(blank=True, null=True)),
                ('user_rank', models.IntegerField(default=1)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', Books.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thread_title', models.CharField(max_length=50)),
                ('thread_text', models.TextField()),
                ('thread_hash_tags', models.TextField()),
                ('thread_count', models.IntegerField(default=0)),
                ('thread_contrib_count', models.IntegerField(default=1)),
                ('thread_likes', models.IntegerField(default=0)),
                ('thread_views', models.IntegerField(default=0)),
                ('thread_states', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('book_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Books.book')),
                ('chapter_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Books.chapter')),
                ('thread_writer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('post_text', models.TextField()),
                ('post_likes', models.IntegerField(default=0)),
                ('post_adopted', models.BooleanField(default=False)),
                ('book_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Books.book')),
                ('post_writer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('thread_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Books.thread')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('comment_text', models.CharField(max_length=255)),
                ('book_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Books.book')),
                ('comment_writer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Books.post')),
                ('thread_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Books.thread')),
            ],
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['book_id'], name='Books_book_book_id_e3dd53_idx'),
        ),
        migrations.AddIndex(
            model_name='thread',
            index=models.Index(fields=['book_id', 'chapter_id', 'id'], name='Books_threa_book_id_c1b06b_idx'),
        ),
        migrations.AddConstraint(
            model_name='thread',
            constraint=models.UniqueConstraint(fields=('book_id', 'id'), name='unique_book_thread'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['book_id', 'thread_id', 'id'], name='Books_post_book_id_554d62_idx'),
        ),
        migrations.AddConstraint(
            model_name='post',
            constraint=models.UniqueConstraint(fields=('book_id', 'id'), name='unique_book_post'),
        ),
        migrations.AddIndex(
            model_name='chapter',
            index=models.Index(fields=['book_id', 'chapter_num'], name='Books_chapt_book_id_800796_idx'),
        ),
        migrations.AddConstraint(
            model_name='chapter',
            constraint=models.UniqueConstraint(fields=('book_id', 'chapter_num'), name='unique_book_chapter'),
        ),
    ]
